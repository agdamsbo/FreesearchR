[{"path":[]},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement agdamsbo@clin.au.dk. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://agdamsbo.github.io/freesearcheR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andreas Gammelgaard Damsbo. Author, maintainer.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Damsbo (2025). freesearcheR: Browser Based Data Analysis. R package version 25.1.1, https://agdamsbo.github.io/freesearcheR/, https://github.com/agdamsbo/freesearcheR.","code":"@Manual{,   title = {freesearcheR: Browser Based Data Analysis},   author = {Andreas Gammelgaard Damsbo},   year = {2025},   note = {R package version 25.1.1, https://agdamsbo.github.io/freesearcheR/},   url = {https://github.com/agdamsbo/freesearcheR}, }"},{"path":"https://agdamsbo.github.io/freesearcheR/index.html","id":"freesearcher","dir":"","previous_headings":"","what":"Browser Based Data Analysis","title":"Browser Based Data Analysis","text":"package backbone free open browser based data exploration analysis tool publication ready output. package freesearcheR-tool part large project democratize health data analysis removing barriers clinicians engage health research. 2024-12-19 freesearcheR-tool online accessible : link shinyapps.io free hosting. feedback welcome can shared GitHub issue. Initiatives start funding continue development tool surrounding initiatives start soon.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Browser Based Data Analysis","text":"Stratified analyses Additional study designs: Cross-sectional data analyses Longitudinal data analyses Survival analysis detailed variable browser Add histograms data distribution Option edit labels Plot regression analyses results Export modified data Include reproducible code steps Modify factor levels Factor level modifications possible converting factors numeric > cutting numeric desired fixed values. 2024-12-12 options date/datetime/time grouping/factoring. Included weekday month-options. 2024-12-12","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/index.html","id":"install-locally","dir":"","previous_headings":"","what":"Install locally","title":"Browser Based Data Analysis","text":"freesearcheR-tool can also launched locally. data.frame available global environment accessible interface.","code":"require(\"devtools\") devtools::install_github(\"agdamsbo/freesearcheR\") library(freesearcheR) # By loading mtcars to the environment, it will be available # in the interface like any other data.frame data(mtcars) shiny_freesearcheR()"},{"path":"https://agdamsbo.github.io/freesearcheR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Browser Based Data Analysis","text":"Please note freesearcheR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/argsstring2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string of arguments to list of arguments — argsstring2list","title":"Convert string of arguments to list of arguments — argsstring2list","text":"Idea answer: https://stackoverflow.com//62979238","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/argsstring2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string of arguments to list of arguments — argsstring2list","text":"","code":"argsstring2list(string)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/argsstring2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string of arguments to list of arguments — argsstring2list","text":"string string convert list use .call","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/argsstring2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string of arguments to list of arguments — argsstring2list","text":"list","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/baseline_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a flexible baseline characteristics table — baseline_table","title":"Print a flexible baseline characteristics table — baseline_table","text":"Print flexible baseline characteristics table","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/baseline_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a flexible baseline characteristics table — baseline_table","text":"","code":"baseline_table(   data,   fun.args = NULL,   fun = gtsummary::tbl_summary,   vars = NULL )"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/baseline_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a flexible baseline characteristics table — baseline_table","text":"data data set fun.args list arguments passed fun function vars character vector variables include","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/baseline_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a flexible baseline characteristics table — baseline_table","text":"object standard class fun","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/baseline_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a flexible baseline characteristics table — baseline_table","text":"","code":"mtcars |> baseline_table()     Characteristic       N = 321     mpg 19.2 (15.4, 22.8)cyl     4 11 (34%)    6 7 (22%)    8 14 (44%)disp 196 (121, 334)hp 123 (96, 180)drat 3.70 (3.08, 3.92)wt 3.33 (2.54, 3.65)qsec 17.71 (16.89, 18.90)vs 14 (44%)am 13 (41%)gear     3 15 (47%)    4 12 (38%)    5 5 (16%)carb     1 7 (22%)    2 10 (31%)    3 3 (9.4%)    4 10 (31%)    6 1 (3.1%)    8 1 (3.1%)1 Median (Q1, Q3); n (%)     mtcars |> baseline_table(fun.args = list(by = \"gear\"))     Characteristic       3 N = 151       4 N = 121       5 N = 51     mpg 15.5 (14.3, 18.7) 22.8 (21.0, 28.9) 19.7 (15.8, 26.0)cyl       4 1 (6.7%) 8 (67%) 2 (40%)    6 2 (13%) 4 (33%) 1 (20%)    8 12 (80%) 0 (0%) 2 (40%)disp 318 (276, 400) 131 (79, 160) 145 (120, 301)hp 180 (150, 215) 94 (66, 110) 175 (113, 264)drat 3.08 (3.00, 3.21) 3.92 (3.90, 4.10) 3.77 (3.62, 4.22)wt 3.73 (3.44, 4.07) 2.70 (2.07, 3.17) 2.77 (2.14, 3.17)qsec 17.42 (17.02, 18.00) 18.76 (18.41, 19.69) 15.50 (14.60, 16.70)vs 3 (20%) 10 (83%) 1 (20%)am 0 (0%) 8 (67%) 5 (100%)carb       1 3 (20%) 4 (33%) 0 (0%)    2 4 (27%) 4 (33%) 2 (40%)    3 3 (20%) 0 (0%) 0 (0%)    4 5 (33%) 4 (33%) 1 (20%)    6 0 (0%) 0 (0%) 1 (20%)    8 0 (0%) 0 (0%) 1 (20%)1 Median (Q1, Q3); n (%)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/custom_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom theme based on unity — custom_theme","title":"Custom theme based on unity — custom_theme","text":"Custom theme based unity","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/custom_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom theme based on unity — custom_theme","text":"","code":"custom_theme(   ...,   version = 5,   primary = \"#1E4A8F\",   secondary = \"#FF6F61\",   bootswatch = \"united\",   base_font = bslib::font_google(\"Montserrat\"),   heading_font = bslib::font_google(\"Public Sans\", wght = \"700\"),   code_font = bslib::font_google(\"Open Sans\") )"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/custom_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom theme based on unity — custom_theme","text":"... everything passed bslib::bs_theme()","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/custom_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom theme based on unity — custom_theme","text":"theme list","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut-variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Module to Convert Numeric to Factor — cut-variable","title":"Module to Convert Numeric to Factor — cut-variable","text":"module contain interface cut numeric several intervals.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut-variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module to Convert Numeric to Factor — cut-variable","text":"","code":"cut_variable_ui(id)  cut_variable_server(id, data_r = reactive(NULL))  modal_cut_variable(   id,   title = i18n(\"Convert Numeric to Factor\"),   easyClose = TRUE,   size = \"l\",   footer = NULL )  winbox_cut_variable(   id,   title = i18n(\"Convert Numeric to Factor\"),   options = shinyWidgets::wbOptions(),   controls = shinyWidgets::wbControls() )"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut-variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module to Convert Numeric to Factor — cut-variable","text":"id Module ID. data_r shiny::reactive() function returning data.frame. title optional title dialog. easyClose TRUE, modal dialog can dismissed clicking outside dialog box, pressing Escape key. FALSE (default), modal dialog dismissed ways; instead must dismissed clicking modalButton(), call removeModal() server. size One \"s\" small, \"m\" (default) medium, \"l\" large, \"xl\" extra large. Note \"xl\" works Bootstrap 4 (opt-Bootstrap 4+, pass bslib::bs_theme() theme argument page container like fluidPage()). footer UI footer. Use NULL footer. options List options, see wbOptions(). controls List controls, see wbControls().","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut-variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module to Convert Numeric to Factor — cut-variable","text":"shiny::reactive() function returning data.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — cut.hms","title":"Title — cut.hms","text":"Title","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — cut.hms","text":"","code":"# S3 method for class 'hms' cut(x, breaks, ...)  # S3 method for class 'POSIXt' cut(   x,   breaks,   right = FALSE,   include.lowest = TRUE,   start.on.monday = TRUE,   ... )  # S3 method for class 'POSIXct' cut(   x,   breaks,   right = FALSE,   include.lowest = TRUE,   start.on.monday = TRUE,   ... )  # S3 method for class 'Date' cut(x, breaks, start.on.monday = TRUE, ...)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — cut.hms","text":"x object inheriting class \"POSIXct\" ... passed ","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — cut.hms","text":"factor","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/cut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — cut.hms","text":"","code":"readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"08:20:20\", \"21:20:20\", \"03:02:20\")) |> cut(2) #> [1] 01:00:20 01:00:20 01:00:20 03:01:20 <NA>     03:01:20 #> attr(,\"brks\") #> 01:00:20 #> 03:01:20 #> 21:20:20 #> Levels: 01:00:20 03:01:20 readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"08:20:20\", \"21:20:20\", \"03:02:20\")) |> cut(\"min\") #> [1] 01:00:00 03:00:00 01:20:00 08:20:00 21:20:00 03:02:00 #> attr(,\"brks\") #> 01:00:00 #> 01:20:00 #> 03:00:00 #> 03:02:00 #> 08:20:00 #> 21:20:00 #> 21:20:20 #> Levels: 01:00:00 01:20:00 03:00:00 03:02:00 08:20:00 21:20:00 readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"08:20:20\", \"21:20:20\", \"03:02:20\")) |> cut(breaks = \"hour\") #> [1] 01:00:00 03:00:00 01:00:00 08:00:00 21:00:00 03:00:00 #> attr(,\"brks\") #> 01:00:00 #> 03:00:00 #> 08:00:00 #> 21:00:00 #> 21:20:20 #> Levels: 01:00:00 03:00:00 08:00:00 21:00:00 readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"08:20:20\", \"21:20:20\", \"03:02:20\")) |> cut(breaks = hms::as_hms(c(\"01:00:00\", \"03:01:20\", \"9:20:20\"))) #> [1] 01:00:00 01:00:00 01:00:00 03:01:20 <NA>     03:01:20 #> attr(,\"brks\") #> 01:00:00 #> 03:01:20 #> 09:20:20 #> Levels: 01:00:00 03:01:20 d_t <- readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"03:02:20\", NA)) f <- d_t |> cut(2) readr::parse_time(c(\"01:00:20\", \"03:00:20\", \"01:20:20\", \"03:02:20\", NA)) |> cut(breaks = lubridate::as_datetime(c(hms::as_hms(levels(f)), hms::as_hms(max(d_t, na.rm = TRUE) + 1))), right = FALSE) #> Warning: tz(): Don't know how to compute timezone for object of class hms/difftime; returning \"UTC\". #> [1] 01:00:20 02:10:20 01:00:20 02:10:20 <NA>     #> attr(,\"brks\") #> 01:00:20 #> 02:10:20 #> 03:02:21 #> Levels: 01:00:20 02:10:20 readr::parse_datetime(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\", \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\", \"1992-12-01 03:02:20\")) |> cut(2) #> [1] 1992-02-01 01:00:20 1992-02-01 01:00:20 1992-02-01 01:00:20 #> [4] 1992-02-01 01:00:20 1999-02-01 21:20:20 1992-02-01 01:00:20 #> Levels: 1992-02-01 01:00:20 1999-02-01 21:20:20 readr::parse_datetime(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\", \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\", \"1992-12-01 03:02:20\")) |> cut(breaks=\"weekday\") #> Error in cut.POSIXt(readr::parse_datetime(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\",     \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\",     \"1992-12-01 03:02:20\")), breaks = \"weekday\"): invalid specification of 'breaks' readr::parse_datetime(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\", \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\", \"1992-12-01 03:02:20\")) |> cut(breaks=\"month_only\") #> Error in cut.POSIXt(readr::parse_datetime(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\",     \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\",     \"1992-12-01 03:02:20\")), breaks = \"month_only\"): invalid specification of 'breaks' as.Date(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\", \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\", \"1992-12-01 03:02:20\")) |> cut(2) #> [1] 1992-02-01 1992-02-01 1992-02-01 1992-02-01 1999-02-01 1992-02-01 #> Levels: 1992-02-01 1999-02-01 as.Date(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\", \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\", \"1992-12-01 03:02:20\")) |> cut(breaks=\"weekday\") #> Error in cut.Date(as.Date(c(\"1992-02-01 01:00:20\", \"1992-02-06 03:00:20\",     \"1992-05-01 01:20:20\", \"1992-09-01 08:20:20\", \"1999-02-01 21:20:20\",     \"1992-12-01 03:02:20\")), breaks = \"weekday\"): invalid specification of 'breaks'"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_format_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults qmd formats — default_format_arguments","title":"Defaults qmd formats — default_format_arguments","text":"Defaults qmd formats","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_format_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defaults qmd formats — default_format_arguments","text":"","code":"default_format_arguments()"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_format_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defaults qmd formats — default_format_arguments","text":"list","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_parsing.html","id":null,"dir":"Reference","previous_headings":"","what":"Default data parsing — default_parsing","title":"Default data parsing — default_parsing","text":"Default data parsing","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_parsing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default data parsing — default_parsing","text":"","code":"default_parsing(data)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_parsing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default data parsing — default_parsing","text":"data data","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_parsing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default data parsing — default_parsing","text":"data.frame tibble","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/default_parsing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default data parsing — default_parsing","text":"","code":"mtcars |> str() #> 'data.frame':\t32 obs. of  11 variables: #>  $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ cyl : num  6 6 4 6 8 6 8 4 4 6 ... #>  $ disp: num  160 160 108 258 360 ... #>  $ hp  : num  110 110 93 110 175 105 245 62 95 123 ... #>  $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>  $ wt  : num  2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec: num  16.5 17 18.6 19.4 17 ... #>  $ vs  : num  0 0 1 1 0 1 0 1 1 1 ... #>  $ am  : num  1 1 1 0 0 0 0 0 0 0 ... #>  $ gear: num  4 4 4 3 3 3 3 4 4 4 ... #>  $ carb: num  4 4 1 1 2 1 4 2 2 4 ... mtcars |>   default_parsing() |>   str() #> tibble [32 × 11] (S3: tbl_df/tbl/data.frame) #>  $ mpg : num [1:32] 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ cyl : Factor w/ 3 levels \"4\",\"6\",\"8\": 2 2 1 2 3 2 3 1 1 2 ... #>  $ disp: num [1:32] 160 160 108 258 360 ... #>  $ hp  : num [1:32] 110 110 93 110 175 105 245 62 95 123 ... #>  $ drat: num [1:32] 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>  $ wt  : num [1:32] 2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec: num [1:32] 16.5 17 18.6 19.4 17 ... #>  $ vs  : Factor w/ 2 levels \"0\",\"1\": 1 1 2 2 1 2 1 2 2 2 ... #>  $ am  : Factor w/ 2 levels \"0\",\"1\": 2 2 2 1 1 1 1 1 1 1 ... #>  $ gear: Factor w/ 3 levels \"3\",\"4\",\"5\": 2 2 2 1 1 1 1 2 2 2 ... #>  $ carb: Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 4 1 1 2 1 4 2 2 4 ..."},{"path":"https://agdamsbo.github.io/freesearcheR/reference/factorize.html","id":null,"dir":"Reference","previous_headings":"","what":"Factorize variables in data.frame — factorize","title":"Factorize variables in data.frame — factorize","text":"Factorize variables data.frame","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/factorize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factorize variables in data.frame — factorize","text":"","code":"factorize(data, vars)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/factorize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factorize variables in data.frame — factorize","text":"data data.frame vars variables force factorize","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/factorize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factorize variables in data.frame — factorize","text":"data.frame","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/file_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — file_export","title":"Title — file_export","text":"Title","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/file_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — file_export","text":"","code":"file_export(data, output.format = c(\"df\", \"teal\", \"list\"), filename, ...)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/file_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — file_export","text":"data data output.format output filename filename ... passed ","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/file_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — file_export","text":"data","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/format_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges list of named arguments for qmd header generation — format_writer","title":"Merges list of named arguments for qmd header generation — format_writer","text":"Merges list named arguments qmd header generation","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/format_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges list of named arguments for qmd header generation — format_writer","text":"","code":"format_writer(data, name)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/format_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges list of named arguments for qmd header generation — format_writer","text":"data vector name name","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/format_writer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merges list of named arguments for qmd header generation — format_writer","text":"vector","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/getfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","title":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","text":"function follows idea comment: https://stackoverflow.com/questions/38983179/-call--function--r-without-loading--package","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/getfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","text":"","code":"getfun(x)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/getfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","text":"x function function name","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/getfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","text":"function character vector","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/getfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper function to get function from character vector referring to function from namespace. Passed to 'do.call()' — getfun","text":"","code":"getfun(\"stats::lm\") #> function (formula, data, subset, weights, na.action, method = \"qr\",  #>     model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE,  #>     contrasts = NULL, offset, ...)  #> { #>     ret.x <- x #>     ret.y <- y #>     cl <- match.call() #>     mf <- match.call(expand.dots = FALSE) #>     m <- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\",  #>         \"offset\"), names(mf), 0L) #>     mf <- mf[c(1L, m)] #>     mf$drop.unused.levels <- TRUE #>     mf[[1L]] <- quote(stats::model.frame) #>     mf <- eval(mf, parent.frame()) #>     if (method == \"model.frame\")  #>         return(mf) #>     else if (method != \"qr\")  #>         warning(gettextf(\"method = '%s' is not supported. Using 'qr'\",  #>             method), domain = NA) #>     mt <- attr(mf, \"terms\") #>     y <- model.response(mf, \"numeric\") #>     w <- as.vector(model.weights(mf)) #>     if (!is.null(w) && !is.numeric(w))  #>         stop(\"'weights' must be a numeric vector\") #>     offset <- model.offset(mf) #>     mlm <- is.matrix(y) #>     ny <- if (mlm)  #>         nrow(y) #>     else length(y) #>     if (!is.null(offset)) { #>         if (!mlm)  #>             offset <- as.vector(offset) #>         if (NROW(offset) != ny)  #>             stop(gettextf(\"number of offsets is %d, should equal %d (number of observations)\",  #>                 NROW(offset), ny), domain = NA) #>     } #>     if (is.empty.model(mt)) { #>         x <- NULL #>         z <- list(coefficients = if (mlm) matrix(NA_real_, 0,  #>             ncol(y)) else numeric(), residuals = y, fitted.values = 0 *  #>             y, weights = w, rank = 0L, df.residual = if (!is.null(w)) sum(w !=  #>             0) else ny) #>         if (!is.null(offset)) { #>             z$fitted.values <- offset #>             z$residuals <- y - offset #>         } #>     } #>     else { #>         x <- model.matrix(mt, mf, contrasts) #>         z <- if (is.null(w))  #>             lm.fit(x, y, offset = offset, singular.ok = singular.ok,  #>                 ...) #>         else lm.wfit(x, y, w, offset = offset, singular.ok = singular.ok,  #>             ...) #>     } #>     class(z) <- c(if (mlm) \"mlm\", \"lm\") #>     z$na.action <- attr(mf, \"na.action\") #>     z$offset <- offset #>     z$contrasts <- attr(x, \"contrasts\") #>     z$xlevels <- .getXlevels(mt, mf) #>     z$call <- cl #>     z$terms <- mt #>     if (model)  #>         z$model <- mf #>     if (ret.x)  #>         z$x <- x #>     if (ret.y)  #>         z$y <- y #>     if (!qr)  #>         z$qr <- NULL #>     z #> } #> <bytecode: 0x560d63b83df0> #> <environment: namespace:stats>"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/index_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Split vector by an index and embed addition — index_embed","title":"Split vector by an index and embed addition — index_embed","text":"Split vector index embed addition","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/index_embed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split vector by an index and embed addition — index_embed","text":"","code":"index_embed(data, index, add = NULL)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/index_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split vector by an index and embed addition — index_embed","text":"data vector index split index add addition","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/index_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split vector by an index and embed addition — index_embed","text":"vector","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_any_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Test class — is_any_class","title":"Test class — is_any_class","text":"Test class","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_any_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test class — is_any_class","text":"","code":"is_any_class(data, class.vec)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_any_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test class — is_any_class","text":"data data class.vec vector class names test","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_any_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test class — is_any_class","text":"factor","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_any_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test class — is_any_class","text":"","code":"if (FALSE) { # \\dontrun{ vapply(REDCapCAST::redcapcast_data, \\(.x){   is_any_class(.x, c(\"hms\", \"Date\", \"POSIXct\", \"POSIXt\")) }, logical(1)) } # }"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Test is date/datetime/time — is_datetime","title":"Test is date/datetime/time — is_datetime","text":"Test date/datetime/time","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test is date/datetime/time — is_datetime","text":"","code":"is_datetime(data)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test is date/datetime/time — is_datetime","text":"data data","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_datetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test is date/datetime/time — is_datetime","text":"factor","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/is_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test is date/datetime/time — is_datetime","text":"","code":"vapply(REDCapCAST::redcapcast_data, is_datetime, logical(1)) #>                    record_id            redcap_event_name  #>                        FALSE                        FALSE  #>     redcap_repeat_instrument       redcap_repeat_instance  #>                        FALSE                        FALSE  #>                          cpr                    inclusion  #>                        FALSE                         TRUE  #>               inclusion_time                          dob  #>                         TRUE                         TRUE  #>                          age                  age_integer  #>                        FALSE                        FALSE  #>                          sex                 cohabitation  #>                        FALSE                        FALSE  #>                 hypertension                     diabetes  #>                        FALSE                        FALSE  #>                       region baseline_data_start_complete  #>                        FALSE                        FALSE  #>                 mrs_assessed                     mrs_date  #>                        FALSE                         TRUE  #>                    mrs_score                 mrs_complete  #>                        FALSE                        FALSE  #>                      con_mrs                     con_calc  #>                        FALSE                        FALSE  #>           consensus_complete               event_datetime  #>                        FALSE                         TRUE  #>                    event_age                   event_type  #>                        FALSE                        FALSE  #>           new_event_complete  #>                        FALSE"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/modify_qmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to modify quarto file to render specific formats — modify_qmd","title":"Wrapper to modify quarto file to render specific formats — modify_qmd","text":"Wrapper modify quarto file render specific formats","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/modify_qmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to modify quarto file to render specific formats — modify_qmd","text":"","code":"modify_qmd(file, format)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/modify_qmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to modify quarto file to render specific formats — modify_qmd","text":"file filename format desired output","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/modify_qmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to modify quarto file to render specific formats — modify_qmd","text":"none","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/read_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible file import based on extension — read_input","title":"Flexible file import based on extension — read_input","text":"Flexible file import based extension","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/read_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible file import based on extension — read_input","text":"","code":"read_input(file, consider.na = c(\"NA\", \"\\\"\\\"\", \"\"))"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/read_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible file import based on extension — read_input","text":"file file name consider.na character vector strings consider NAs","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/read_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible file import based on extension — read_input","text":"tibble","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/read_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexible file import based on extension — read_input","text":"","code":"read_input(\"https://raw.githubusercontent.com/agdamsbo/cognitive.index.lookup/main/data/sample.csv\") #> Rows: 28 Columns: 8 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (8): id, ab, age, imm, vis, ver, att, del #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 28 × 8 #>       id    ab   age   imm   vis   ver   att   del #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1     1    74    38    35    30    29    35 #>  2     1     2    69    36    36    21    27    37 #>  3     2     1    63    32    31    26    34    38 #>  4     2     2    64    37    34    26    36    46 #>  5     3     1    69    39    33    31    47    29 #>  6     3     2    70    40    36    31    46    25 #>  7     4     1    79    44    37    20    37    36 #>  8     4     2    81    35    36    31    37    40 #>  9     5     1    77    35    26    17    20    36 #> 10     5     2    80    29    34    18    23    36 #> # ℹ 18 more rows"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module to browser and export REDCap data — m_redcap_readUI","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"Shiny module browser export REDCap data REDCap import teal data module Test app redcap_read_shiny_module","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"","code":"m_redcap_readUI(id, include_title = TRUE)  m_redcap_readServer(id, output.format = c(\"df\", \"teal\", \"list\"))  tdm_redcap_read  redcap_app()"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"object class teal_data_module length 2.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"id Namespace id include_title logical include title output.format data.frame (\"df\") teal data object (\"teal\")","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"shiny ui element shiny server module","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/redcap_read_shiny_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module to browser and export REDCap data — m_redcap_readUI","text":"","code":"if (FALSE) { # \\dontrun{ redcap_app() } # }"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regression model programatically — regression_model","title":"Create a regression model programatically — regression_model","text":"Create regression model programatically","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regression model programatically — regression_model","text":"","code":"regression_model(   data,   outcome.str,   auto.mode = TRUE,   formula.str = NULL,   args.list = NULL,   fun = NULL,   vars = NULL,   ... )"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regression model programatically — regression_model","text":"data data set outcome.str Name outcome variable. Character vector. auto.mode Make assumptions function dependent outcome data format. Overwrites arguments. formula.str Formula string. Passed 'glue::glue'. given, 'outcome.str' 'vars' ignored. Optional. args.list List arguments passed 'fun' '.call'. fun Name function character vector function use model creation. vars character vector variables include ... ignored now","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regression model programatically — regression_model","text":"object standard class fun","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regression model programatically — regression_model","text":"","code":"gtsummary::trial |>   regression_model(outcome.str = \"age\") #>  #> Call: #> (function (formula, data, subset, weights, na.action, method = \"qr\",  #>     model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE,  #>     contrasts = NULL, offset, ...)  #> { #>     ret.x <- x #>     ret.y <- y #>     cl <- match.call() #>     mf <- match.call(expand.dots = FALSE) #>     m <- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\",  #>         \"offset\"), names(mf), 0L) #>     mf <- mf[c(1L, m)] #>     mf$drop.unused.levels <- TRUE #>     mf[[1L]] <- quote(stats::model.frame) #>     mf <- eval(mf, parent.frame()) #>     if (method == \"model.frame\")  #>         return(mf) #>     else if (method != \"qr\")  #>         warning(gettextf(\"method = '%s' is not supported. Using 'qr'\",  #>             method), domain = NA) #>     mt <- attr(mf, \"terms\") #>     y <- model.response(mf, \"numeric\") #>     w <- as.vector(model.weights(mf)) #>     if (!is.null(w) && !is.numeric(w))  #>         stop(\"'weights' must be a numeric vector\") #>     offset <- model.offset(mf) #>     mlm <- is.matrix(y) #>     ny <- if (mlm)  #>         nrow(y) #>     else length(y) #>     if (!is.null(offset)) { #>         if (!mlm)  #>             offset <- as.vector(offset) #>         if (NROW(offset) != ny)  #>             stop(gettextf(\"number of offsets is %d, should equal %d (number of observations)\",  #>                 NROW(offset), ny), domain = NA) #>     } #>     if (is.empty.model(mt)) { #>         x <- NULL #>         z <- list(coefficients = if (mlm) matrix(NA_real_, 0,  #>             ncol(y)) else numeric(), residuals = y, fitted.values = 0 *  #>             y, weights = w, rank = 0L, df.residual = if (!is.null(w)) sum(w !=  #>             0) else ny) #>         if (!is.null(offset)) { #>             z$fitted.values <- offset #>             z$residuals <- y - offset #>         } #>     } #>     else { #>         x <- model.matrix(mt, mf, contrasts) #>         z <- if (is.null(w))  #>             lm.fit(x, y, offset = offset, singular.ok = singular.ok,  #>                 ...) #>         else lm.wfit(x, y, w, offset = offset, singular.ok = singular.ok,  #>             ...) #>     } #>     class(z) <- c(if (mlm) \"mlm\", \"lm\") #>     z$na.action <- attr(mf, \"na.action\") #>     z$offset <- offset #>     z$contrasts <- attr(x, \"contrasts\") #>     z$xlevels <- .getXlevels(mt, mf) #>     z$call <- cl #>     z$terms <- mt #>     if (model)  #>         z$model <- mf #>     if (ret.x)  #>         z$x <- x #>     if (ret.y)  #>         z$y <- y #>     if (!qr)  #>         z$qr <- NULL #>     z #> })(formula = age ~ ., data = structure(list(trt = structure(c(1L,  #> 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L,  #> 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L,  #> 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 2L,  #> 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L,  #> 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L,  #> 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L,  #> 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L,  #> 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L,  #> 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L,  #> 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L,  #> 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L,  #> 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L,  #> 2L, 1L, 2L, 1L, 1L, 1L, 1L), levels = c(\"Drug A\", \"Drug B\"), class = \"factor\", label = \"Chemotherapy Treatment\"),  #>     age = structure(c(23, 9, 31, NA, 51, 39, 37, 32, 31, 34,  #>     42, 63, 54, 21, 48, 71, 38, 49, 57, 46, 47, 52, 61, 38, 34,  #>     49, 63, 67, 68, 78, 36, 37, 53, 36, 51, 48, 57, 31, 37, 28,  #>     40, 49, 61, 56, 54, 71, 38, 31, 48, NA, 83, 52, 32, 53, 69,  #>     60, 45, 39, NA, 38, 36, 71, 31, 43, 57, 53, 25, 44, 25, 30,  #>     51, 40, NA, 43, 21, 54, 67, 43, 54, 41, 34, 34, 6, 39, 36,  #>     58, 27, 47, NA, 50, 61, 47, 52, 51, 68, 33, 65, 34, 38, 60,  #>     10, 49, 56, 50, 60, 49, 54, 39, 48, 65, 47, 61, 34, NA, NA,  #>     58, 26, 44, 17, 68, 57, 66, 44, NA, 67, 48, 62, 35, 53, 53,  #>     66, 55, 57, 47, 58, 43, 45, 44, 63, 59, 44, 53, 51, 28, 65,  #>     63, 76, 61, 33, 48, 42, 36, 55, 20, 26, 50, 47, 74, 50, 31,  #>     45, 51, 66, 76, 47, 48, 56, 70, 46, 43, 41, 41, 19, 49, 43,  #>     43, 75, 52, 42, 37, 45, 35, 67, 38, 44, 45, 39, 46, NA, 42,  #>     60, 31, 45, 38, NA, 19, 69, 66, NA, 64), label = \"Age\"),  #>     marker = structure(c(0.16, 1.107, 0.277, 2.067, 2.767, 0.613,  #>     0.354, 1.739, 0.144, 0.205, 0.513, 0.06, 0.831, 0.258, 0.128,  #>     0.445, 2.083, 0.157, 0.066, 0.325, 0.266, 0.719, 1.713, 0.096,  #>     0.105, 0.043, 0.981, 1.156, 0.105, 0.175, 0.309, 1.869, 2.008,  #>     1.894, 0.16, 1.209, 0.108, 0.611, 0.222, 0.803, 0.37, NA,  #>     0.177, 1.479, 0.161, 0.737, 0.124, 0.092, 0.385, 0.21, 0.475,  #>     1.628, 0.583, NA, 0.702, 1.206, 2.213, 1.406, 0.101, 0.013,  #>     2.032, 1.046, 0.408, 2.636, 1.263, NA, 2.447, 1.041, 0.531,  #>     0.924, 1.087, 0.733, 2.157, 0.333, 1.527, 2.238, 0.153, 0.305,  #>     0.131, 0.386, 1.645, 1.321, 0.229, 0.615, 1.976, 1.941, 0.22,  #>     3.874, 0.982, 1.68, 1.091, 0.169, 0.511, 2.141, 0.599, NA,  #>     0.389, 0.005, 0.075, 1.491, 0.358, 1.709, 0.056, 1.354, 2.522,  #>     0.387, 0.592, 0.243, 0.215, 1.207, 0.29, 0.718, 0.589, 0.003,  #>     1.328, 0.308, 0.691, 3.249, 0.039, 1.804, 0.238, 2.702, 1.441,  #>     0.27, NA, NA, 0.062, 2.19, 0.976, 3.062, 0.124, 0.045, 1.892,  #>     0.711, 1.079, 1.061, 0.239, 0.361, 0.033, 1.133, 1.225, 1.418,  #>     3.751, 3.02, 0.086, 0.772, 1.882, 2.725, 2.41, 0.352, 0.895,  #>     0.215, 0.141, 2.288, 1.658, 1.255, 1.306, 0.081, 0.667, 0.046,  #>     0.662, 1.985, 1.063, 1.55, 0.015, 0.056, NA, 0.51, 0.929,  #>     2.345, 0.25, 0.816, 0.022, 0.16, 0.547, 3.642, 0.092, 1.2,  #>     1.512, 2.124, NA, 0.862, 0.182, 1.075, 0.021, 0.402, 0.063,  #>     1.129, 0.61, NA, 0.717, 0.205, 0.946, 0.386, 0.37, 1.148,  #>     NA, 0.136, 0.439, 1.148), label = \"Marker Level (ng/mL)\"),  #>     stage = structure(c(1L, 2L, 1L, 3L, 4L, 4L, 1L, 1L, 1L, 3L,  #>     1L, 3L, 4L, 4L, 1L, 4L, 4L, 2L, 1L, 1L, 2L, 2L, 4L, 4L, 4L,  #>     2L, 4L, 1L, 4L, 3L, 1L, 2L, 3L, 3L, 3L, 3L, 1L, 1L, 4L, 4L,  #>     3L, 1L, 4L, 3L, 4L, 1L, 1L, 2L, 1L, 4L, 1L, 2L, 2L, 3L, 3L,  #>     2L, 4L, 1L, 4L, 2L, 4L, 1L, 4L, 1L, 4L, 1L, 1L, 1L, 4L, 1L,  #>     2L, 2L, 2L, 1L, 4L, 4L, 2L, 2L, 4L, 4L, 3L, 2L, 4L, 3L, 2L,  #>     4L, 1L, 2L, 1L, 4L, 3L, 3L, 1L, 3L, 2L, 3L, 2L, 2L, 3L, 4L,  #>     4L, 3L, 3L, 2L, 3L, 2L, 2L, 3L, 2L, 1L, 1L, 3L, 4L, 1L, 4L,  #>     3L, 3L, 2L, 4L, 2L, 1L, 2L, 1L, 4L, 3L, 3L, 3L, 2L, 1L, 2L,  #>     1L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 3L, 4L, 1L, 2L, 2L,  #>     1L, 3L, 4L, 2L, 4L, 2L, 1L, 2L, 3L, 1L, 3L, 4L, 2L, 2L, 1L,  #>     2L, 2L, 3L, 1L, 2L, 2L, 1L, 1L, 3L, 2L, 3L, 1L, 1L, 2L, 4L,  #>     2L, 4L, 4L, 2L, 3L, 4L, 3L, 4L, 4L, 1L, 1L, 4L, 4L, 4L, 1L,  #>     2L, 2L, 2L, 4L, 3L, 3L, 2L, 2L, 4L, 3L), levels = c(\"T1\",  #>     \"T2\", \"T3\", \"T4\"), class = \"factor\", label = \"T Stage\"),  #>     grade = structure(c(2L, 1L, 2L, 3L, 3L, 1L, 2L, 1L, 2L, 1L,  #>     3L, 1L, 3L, 1L, 1L, 3L, 3L, 2L, 3L, 2L, 1L, 2L, 1L, 1L, 2L,  #>     3L, 2L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 2L, 2L, 3L, 2L,  #>     2L, 3L, 3L, 1L, 3L, 1L, 3L, 2L, 2L, 2L, 3L, 3L, 3L, 2L, 3L,  #>     1L, 3L, 1L, 2L, 2L, 3L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 3L, 2L,  #>     1L, 3L, 3L, 3L, 2L, 3L, 3L, 1L, 2L, 1L, 1L, 1L, 1L, 3L, 1L,  #>     3L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 2L, 3L, 1L,  #>     3L, 1L, 2L, 2L, 1L, 2L, 2L, 3L, 1L, 3L, 3L, 1L, 1L, 1L, 2L,  #>     3L, 3L, 2L, 1L, 3L, 2L, 1L, 2L, 2L, 2L, 1L, 3L, 3L, 2L, 3L,  #>     1L, 1L, 1L, 2L, 2L, 3L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L,  #>     2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L, 2L, 1L, 2L, 1L, 2L, 3L, 2L,  #>     1L, 1L, 1L, 3L, 1L, 1L, 2L, 1L, 1L, 3L, 3L, 1L, 3L, 2L, 1L,  #>     3L, 1L, 2L, 1L, 1L, 3L, 1L, 2L, 1L, 2L, 2L, 2L, 3L, 2L, 2L,  #>     3L, 2L, 3L, 3L, 2L, 1L, 2L, 3L, 3L, 1L), levels = c(\"I\",  #>     \"II\", \"III\"), class = \"factor\", label = \"Grade\"), response = structure(c(0L,  #>     1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L,  #>     0L, 0L, 1L, 0L, NA, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     0L, 0L, 0L, NA, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     1L, 1L, NA, 1L, 1L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, NA, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L, 0L, 0L,  #>     0L, 1L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 1L, NA, 0L, 1L,  #>     0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L,  #>     1L, 1L, 0L, 0L), label = \"Tumor Response\"), death = structure(c(0L,  #>     0L, 0L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 0L, 0L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 0L,  #>     0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 1L,  #>     1L, 1L, 1L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L,  #>     1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 1L,  #>     1L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L,  #>     0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 1L,  #>     1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     0L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 1L, 0L), label = \"Patient Died\"), ttdeath = structure(c(24,  #>     24, 24, 17.64, 16.43, 15.64, 24, 18.43, 24, 10.53, 24, 24,  #>     14.34, 12.89, 22.68, 8.71, 24, 15.21, 24, 24, 24, 24, 16.92,  #>     23.89, 6.32, 15.77, 24, 24, 15.45, 17.43, 24, 20.9, 24, 24,  #>     24, 21.19, 12.52, 24, 15.59, 18, 18.02, 12.43, 12.1, 24,  #>     17.42, 24, 24, 24, 12.19, 10.02, 18.23, 10.42, 24, 24, 19.34,  #>     12.21, 14.46, 19.34, 10.16, 13.15, 10.12, 24, 22.77, 24,  #>     24, 22.13, 24, 20.62, 23.23, 7.38, 24, 24, 24, 24, 24, 19.22,  #>     7.27, 23.88, 16.23, 24, 14.06, 24, 24, 24, 16.44, 23.81,  #>     24, 18.37, 11.44, 20.94, 5.33, 22.92, 10.33, 24, 24, 14.54,  #>     19.14, 24, 21.19, 16.07, 9.97, 24, 24, 24, 19.75, 16.67,  #>     11.18, 18.29, 24, 17.56, 17.45, 24, 22.86, 13.68, 24, 24,  #>     17.46, 24, 24, 24, 24, 24, 13, 9.73, 15.65, 24, 3.53, 20.35,  #>     23.41, 16.47, 24, 24, 14.65, 17.81, 24, 21.83, 24, 24, 21.49,  #>     12.68, 24, 24, 24, 24, 10.07, 24, 24, 24, 8.37, 20.33, 24,  #>     24, 21.33, 12.63, 13.08, 24, 15.1, 20.14, 10.55, 24, 24,  #>     24, 24, 23.6, 24, 19.98, 15.55, 23.72, 22.41, 19.54, 16.57,  #>     24, 24, 24, 21.91, 24, 12.53, 24, 18.63, 14.82, 16.46, 24,  #>     9.24, 17.77, 24, 24, 9.92, 16.16, 10.51, 20.81, 24, 16.44,  #>     24, 22.4, 11.76, 24, 21.6, 24, 19.81, 24), label = \"Months to Death/Censor\")), class = c(\"tbl_df\",  #> \"tbl\", \"data.frame\"), row.names = c(NA, -200L))) #>  #> Coefficients: #> (Intercept)    trtDrug B       marker      stageT2      stageT3      stageT4   #>     45.9247      -0.4052      -0.1435       2.0519       2.4437      -3.1573   #>     gradeII     gradeIII     response        death      ttdeath   #>      0.1750       1.6855       4.9885       3.0775      -0.1394   #>  gtsummary::trial |>   regression_model(     outcome.str = \"age\",     auto.mode = FALSE,     fun = \"stats::lm\",     formula.str = \"{outcome.str}~.\",     args.list = NULL   ) #>  #> Call: #> (function (formula, data, subset, weights, na.action, method = \"qr\",  #>     model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE,  #>     contrasts = NULL, offset, ...)  #> { #>     ret.x <- x #>     ret.y <- y #>     cl <- match.call() #>     mf <- match.call(expand.dots = FALSE) #>     m <- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\",  #>         \"offset\"), names(mf), 0L) #>     mf <- mf[c(1L, m)] #>     mf$drop.unused.levels <- TRUE #>     mf[[1L]] <- quote(stats::model.frame) #>     mf <- eval(mf, parent.frame()) #>     if (method == \"model.frame\")  #>         return(mf) #>     else if (method != \"qr\")  #>         warning(gettextf(\"method = '%s' is not supported. Using 'qr'\",  #>             method), domain = NA) #>     mt <- attr(mf, \"terms\") #>     y <- model.response(mf, \"numeric\") #>     w <- as.vector(model.weights(mf)) #>     if (!is.null(w) && !is.numeric(w))  #>         stop(\"'weights' must be a numeric vector\") #>     offset <- model.offset(mf) #>     mlm <- is.matrix(y) #>     ny <- if (mlm)  #>         nrow(y) #>     else length(y) #>     if (!is.null(offset)) { #>         if (!mlm)  #>             offset <- as.vector(offset) #>         if (NROW(offset) != ny)  #>             stop(gettextf(\"number of offsets is %d, should equal %d (number of observations)\",  #>                 NROW(offset), ny), domain = NA) #>     } #>     if (is.empty.model(mt)) { #>         x <- NULL #>         z <- list(coefficients = if (mlm) matrix(NA_real_, 0,  #>             ncol(y)) else numeric(), residuals = y, fitted.values = 0 *  #>             y, weights = w, rank = 0L, df.residual = if (!is.null(w)) sum(w !=  #>             0) else ny) #>         if (!is.null(offset)) { #>             z$fitted.values <- offset #>             z$residuals <- y - offset #>         } #>     } #>     else { #>         x <- model.matrix(mt, mf, contrasts) #>         z <- if (is.null(w))  #>             lm.fit(x, y, offset = offset, singular.ok = singular.ok,  #>                 ...) #>         else lm.wfit(x, y, w, offset = offset, singular.ok = singular.ok,  #>             ...) #>     } #>     class(z) <- c(if (mlm) \"mlm\", \"lm\") #>     z$na.action <- attr(mf, \"na.action\") #>     z$offset <- offset #>     z$contrasts <- attr(x, \"contrasts\") #>     z$xlevels <- .getXlevels(mt, mf) #>     z$call <- cl #>     z$terms <- mt #>     if (model)  #>         z$model <- mf #>     if (ret.x)  #>         z$x <- x #>     if (ret.y)  #>         z$y <- y #>     if (!qr)  #>         z$qr <- NULL #>     z #> })(formula = age ~ ., data = structure(list(trt = structure(c(1L,  #> 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L,  #> 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L,  #> 1L, 1L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 2L,  #> 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L,  #> 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L,  #> 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L,  #> 2L, 1L, 1L, 2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L,  #> 1L, 2L, 1L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L,  #> 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L,  #> 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L,  #> 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L, 2L, 1L,  #> 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 1L,  #> 2L, 1L, 2L, 1L, 1L, 1L, 1L), levels = c(\"Drug A\", \"Drug B\"), class = \"factor\", label = \"Chemotherapy Treatment\"),  #>     age = structure(c(23, 9, 31, NA, 51, 39, 37, 32, 31, 34,  #>     42, 63, 54, 21, 48, 71, 38, 49, 57, 46, 47, 52, 61, 38, 34,  #>     49, 63, 67, 68, 78, 36, 37, 53, 36, 51, 48, 57, 31, 37, 28,  #>     40, 49, 61, 56, 54, 71, 38, 31, 48, NA, 83, 52, 32, 53, 69,  #>     60, 45, 39, NA, 38, 36, 71, 31, 43, 57, 53, 25, 44, 25, 30,  #>     51, 40, NA, 43, 21, 54, 67, 43, 54, 41, 34, 34, 6, 39, 36,  #>     58, 27, 47, NA, 50, 61, 47, 52, 51, 68, 33, 65, 34, 38, 60,  #>     10, 49, 56, 50, 60, 49, 54, 39, 48, 65, 47, 61, 34, NA, NA,  #>     58, 26, 44, 17, 68, 57, 66, 44, NA, 67, 48, 62, 35, 53, 53,  #>     66, 55, 57, 47, 58, 43, 45, 44, 63, 59, 44, 53, 51, 28, 65,  #>     63, 76, 61, 33, 48, 42, 36, 55, 20, 26, 50, 47, 74, 50, 31,  #>     45, 51, 66, 76, 47, 48, 56, 70, 46, 43, 41, 41, 19, 49, 43,  #>     43, 75, 52, 42, 37, 45, 35, 67, 38, 44, 45, 39, 46, NA, 42,  #>     60, 31, 45, 38, NA, 19, 69, 66, NA, 64), label = \"Age\"),  #>     marker = structure(c(0.16, 1.107, 0.277, 2.067, 2.767, 0.613,  #>     0.354, 1.739, 0.144, 0.205, 0.513, 0.06, 0.831, 0.258, 0.128,  #>     0.445, 2.083, 0.157, 0.066, 0.325, 0.266, 0.719, 1.713, 0.096,  #>     0.105, 0.043, 0.981, 1.156, 0.105, 0.175, 0.309, 1.869, 2.008,  #>     1.894, 0.16, 1.209, 0.108, 0.611, 0.222, 0.803, 0.37, NA,  #>     0.177, 1.479, 0.161, 0.737, 0.124, 0.092, 0.385, 0.21, 0.475,  #>     1.628, 0.583, NA, 0.702, 1.206, 2.213, 1.406, 0.101, 0.013,  #>     2.032, 1.046, 0.408, 2.636, 1.263, NA, 2.447, 1.041, 0.531,  #>     0.924, 1.087, 0.733, 2.157, 0.333, 1.527, 2.238, 0.153, 0.305,  #>     0.131, 0.386, 1.645, 1.321, 0.229, 0.615, 1.976, 1.941, 0.22,  #>     3.874, 0.982, 1.68, 1.091, 0.169, 0.511, 2.141, 0.599, NA,  #>     0.389, 0.005, 0.075, 1.491, 0.358, 1.709, 0.056, 1.354, 2.522,  #>     0.387, 0.592, 0.243, 0.215, 1.207, 0.29, 0.718, 0.589, 0.003,  #>     1.328, 0.308, 0.691, 3.249, 0.039, 1.804, 0.238, 2.702, 1.441,  #>     0.27, NA, NA, 0.062, 2.19, 0.976, 3.062, 0.124, 0.045, 1.892,  #>     0.711, 1.079, 1.061, 0.239, 0.361, 0.033, 1.133, 1.225, 1.418,  #>     3.751, 3.02, 0.086, 0.772, 1.882, 2.725, 2.41, 0.352, 0.895,  #>     0.215, 0.141, 2.288, 1.658, 1.255, 1.306, 0.081, 0.667, 0.046,  #>     0.662, 1.985, 1.063, 1.55, 0.015, 0.056, NA, 0.51, 0.929,  #>     2.345, 0.25, 0.816, 0.022, 0.16, 0.547, 3.642, 0.092, 1.2,  #>     1.512, 2.124, NA, 0.862, 0.182, 1.075, 0.021, 0.402, 0.063,  #>     1.129, 0.61, NA, 0.717, 0.205, 0.946, 0.386, 0.37, 1.148,  #>     NA, 0.136, 0.439, 1.148), label = \"Marker Level (ng/mL)\"),  #>     stage = structure(c(1L, 2L, 1L, 3L, 4L, 4L, 1L, 1L, 1L, 3L,  #>     1L, 3L, 4L, 4L, 1L, 4L, 4L, 2L, 1L, 1L, 2L, 2L, 4L, 4L, 4L,  #>     2L, 4L, 1L, 4L, 3L, 1L, 2L, 3L, 3L, 3L, 3L, 1L, 1L, 4L, 4L,  #>     3L, 1L, 4L, 3L, 4L, 1L, 1L, 2L, 1L, 4L, 1L, 2L, 2L, 3L, 3L,  #>     2L, 4L, 1L, 4L, 2L, 4L, 1L, 4L, 1L, 4L, 1L, 1L, 1L, 4L, 1L,  #>     2L, 2L, 2L, 1L, 4L, 4L, 2L, 2L, 4L, 4L, 3L, 2L, 4L, 3L, 2L,  #>     4L, 1L, 2L, 1L, 4L, 3L, 3L, 1L, 3L, 2L, 3L, 2L, 2L, 3L, 4L,  #>     4L, 3L, 3L, 2L, 3L, 2L, 2L, 3L, 2L, 1L, 1L, 3L, 4L, 1L, 4L,  #>     3L, 3L, 2L, 4L, 2L, 1L, 2L, 1L, 4L, 3L, 3L, 3L, 2L, 1L, 2L,  #>     1L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 3L, 4L, 1L, 2L, 2L,  #>     1L, 3L, 4L, 2L, 4L, 2L, 1L, 2L, 3L, 1L, 3L, 4L, 2L, 2L, 1L,  #>     2L, 2L, 3L, 1L, 2L, 2L, 1L, 1L, 3L, 2L, 3L, 1L, 1L, 2L, 4L,  #>     2L, 4L, 4L, 2L, 3L, 4L, 3L, 4L, 4L, 1L, 1L, 4L, 4L, 4L, 1L,  #>     2L, 2L, 2L, 4L, 3L, 3L, 2L, 2L, 4L, 3L), levels = c(\"T1\",  #>     \"T2\", \"T3\", \"T4\"), class = \"factor\", label = \"T Stage\"),  #>     grade = structure(c(2L, 1L, 2L, 3L, 3L, 1L, 2L, 1L, 2L, 1L,  #>     3L, 1L, 3L, 1L, 1L, 3L, 3L, 2L, 3L, 2L, 1L, 2L, 1L, 1L, 2L,  #>     3L, 2L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 2L, 2L, 3L, 2L,  #>     2L, 3L, 3L, 1L, 3L, 1L, 3L, 2L, 2L, 2L, 3L, 3L, 3L, 2L, 3L,  #>     1L, 3L, 1L, 2L, 2L, 3L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 3L, 2L,  #>     1L, 3L, 3L, 3L, 2L, 3L, 3L, 1L, 2L, 1L, 1L, 1L, 1L, 3L, 1L,  #>     3L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 2L, 3L, 1L,  #>     3L, 1L, 2L, 2L, 1L, 2L, 2L, 3L, 1L, 3L, 3L, 1L, 1L, 1L, 2L,  #>     3L, 3L, 2L, 1L, 3L, 2L, 1L, 2L, 2L, 2L, 1L, 3L, 3L, 2L, 3L,  #>     1L, 1L, 1L, 2L, 2L, 3L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L,  #>     2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L, 2L, 1L, 2L, 1L, 2L, 3L, 2L,  #>     1L, 1L, 1L, 3L, 1L, 1L, 2L, 1L, 1L, 3L, 3L, 1L, 3L, 2L, 1L,  #>     3L, 1L, 2L, 1L, 1L, 3L, 1L, 2L, 1L, 2L, 2L, 2L, 3L, 2L, 2L,  #>     3L, 2L, 3L, 3L, 2L, 1L, 2L, 3L, 3L, 1L), levels = c(\"I\",  #>     \"II\", \"III\"), class = \"factor\", label = \"Grade\"), response = structure(c(0L,  #>     1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L,  #>     0L, 0L, 1L, 0L, NA, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     0L, 0L, 0L, NA, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     1L, 1L, NA, 1L, 1L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, NA, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L, 0L, 0L,  #>     0L, 1L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 1L, NA, 0L, 1L,  #>     0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L,  #>     1L, 1L, 0L, 0L), label = \"Tumor Response\"), death = structure(c(0L,  #>     0L, 0L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 0L, 0L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 0L,  #>     0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 1L,  #>     1L, 1L, 1L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L,  #>     1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 1L,  #>     1L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L,  #>     0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 1L,  #>     1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     0L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 1L, 0L), label = \"Patient Died\"), ttdeath = structure(c(24,  #>     24, 24, 17.64, 16.43, 15.64, 24, 18.43, 24, 10.53, 24, 24,  #>     14.34, 12.89, 22.68, 8.71, 24, 15.21, 24, 24, 24, 24, 16.92,  #>     23.89, 6.32, 15.77, 24, 24, 15.45, 17.43, 24, 20.9, 24, 24,  #>     24, 21.19, 12.52, 24, 15.59, 18, 18.02, 12.43, 12.1, 24,  #>     17.42, 24, 24, 24, 12.19, 10.02, 18.23, 10.42, 24, 24, 19.34,  #>     12.21, 14.46, 19.34, 10.16, 13.15, 10.12, 24, 22.77, 24,  #>     24, 22.13, 24, 20.62, 23.23, 7.38, 24, 24, 24, 24, 24, 19.22,  #>     7.27, 23.88, 16.23, 24, 14.06, 24, 24, 24, 16.44, 23.81,  #>     24, 18.37, 11.44, 20.94, 5.33, 22.92, 10.33, 24, 24, 14.54,  #>     19.14, 24, 21.19, 16.07, 9.97, 24, 24, 24, 19.75, 16.67,  #>     11.18, 18.29, 24, 17.56, 17.45, 24, 22.86, 13.68, 24, 24,  #>     17.46, 24, 24, 24, 24, 24, 13, 9.73, 15.65, 24, 3.53, 20.35,  #>     23.41, 16.47, 24, 24, 14.65, 17.81, 24, 21.83, 24, 24, 21.49,  #>     12.68, 24, 24, 24, 24, 10.07, 24, 24, 24, 8.37, 20.33, 24,  #>     24, 21.33, 12.63, 13.08, 24, 15.1, 20.14, 10.55, 24, 24,  #>     24, 24, 23.6, 24, 19.98, 15.55, 23.72, 22.41, 19.54, 16.57,  #>     24, 24, 24, 21.91, 24, 12.53, 24, 18.63, 14.82, 16.46, 24,  #>     9.24, 17.77, 24, 24, 9.92, 16.16, 10.51, 20.81, 24, 16.44,  #>     24, 22.4, 11.76, 24, 21.6, 24, 19.81, 24), label = \"Months to Death/Censor\")), class = c(\"tbl_df\",  #> \"tbl\", \"data.frame\"), row.names = c(NA, -200L))) #>  #> Coefficients: #> (Intercept)    trtDrug B       marker      stageT2      stageT3      stageT4   #>     45.9247      -0.4052      -0.1435       2.0519       2.4437      -3.1573   #>     gradeII     gradeIII     response        death      ttdeath   #>      0.1750       1.6855       4.9885       3.0775      -0.1394   #>  gtsummary::trial |> regression_model(   outcome.str = \"trt\",   auto.mode = FALSE,   fun = \"stats::glm\",   args.list = list(family = binomial(link = \"logit\")) ) #>  #> Call:  (function (formula, family = gaussian, data, weights, subset,  #>     na.action, start = NULL, etastart, mustart, offset, control = list(...),  #>     model = TRUE, method = \"glm.fit\", x = FALSE, y = TRUE, singular.ok = TRUE,  #>     contrasts = NULL, ...)  #> { #>     cal <- match.call() #>     if (is.character(family))  #>         family <- get(family, mode = \"function\", envir = parent.frame()) #>     if (is.function(family))  #>         family <- family() #>     if (is.null(family$family)) { #>         print(family) #>         stop(\"'family' not recognized\") #>     } #>     if (missing(data))  #>         data <- environment(formula) #>     mf <- match.call(expand.dots = FALSE) #>     m <- match(c(\"formula\", \"data\", \"subset\", \"weights\", \"na.action\",  #>         \"etastart\", \"mustart\", \"offset\"), names(mf), 0L) #>     mf <- mf[c(1L, m)] #>     mf$drop.unused.levels <- TRUE #>     mf[[1L]] <- quote(stats::model.frame) #>     mf <- eval(mf, parent.frame()) #>     if (identical(method, \"model.frame\"))  #>         return(mf) #>     if (!is.character(method) && !is.function(method))  #>         stop(\"invalid 'method' argument\") #>     if (identical(method, \"glm.fit\"))  #>         control <- do.call(\"glm.control\", control) #>     mt <- attr(mf, \"terms\") #>     Y <- model.response(mf, \"any\") #>     if (length(dim(Y)) == 1L) { #>         nm <- rownames(Y) #>         dim(Y) <- NULL #>         if (!is.null(nm))  #>             names(Y) <- nm #>     } #>     X <- if (!is.empty.model(mt))  #>         model.matrix(mt, mf, contrasts) #>     else matrix(, NROW(Y), 0L) #>     weights <- as.vector(model.weights(mf)) #>     if (!is.null(weights) && !is.numeric(weights))  #>         stop(\"'weights' must be a numeric vector\") #>     if (!is.null(weights) && any(weights < 0))  #>         stop(\"negative weights not allowed\") #>     offset <- as.vector(model.offset(mf)) #>     if (!is.null(offset)) { #>         if (length(offset) != NROW(Y))  #>             stop(gettextf(\"number of offsets is %d should equal %d (number of observations)\",  #>                 length(offset), NROW(Y)), domain = NA) #>     } #>     mustart <- model.extract(mf, \"mustart\") #>     etastart <- model.extract(mf, \"etastart\") #>     fit <- eval(call(if (is.function(method)) \"method\" else method,  #>         x = X, y = Y, weights = weights, start = start, etastart = etastart,  #>         mustart = mustart, offset = offset, family = family,  #>         control = control, intercept = attr(mt, \"intercept\") >  #>             0L, singular.ok = singular.ok)) #>     if (length(offset) && attr(mt, \"intercept\") > 0L) { #>         fit2 <- eval(call(if (is.function(method)) \"method\" else method,  #>             x = X[, \"(Intercept)\", drop = FALSE], y = Y, mustart = fit$fitted.values,  #>             weights = weights, offset = offset, family = family,  #>             control = control, intercept = TRUE)) #>         if (!fit2$converged)  #>             warning(\"fitting to calculate the null deviance did not converge -- increase 'maxit'?\") #>         fit$null.deviance <- fit2$deviance #>     } #>     if (model)  #>         fit$model <- mf #>     fit$na.action <- attr(mf, \"na.action\") #>     if (x)  #>         fit$x <- X #>     if (!y)  #>         fit$y <- NULL #>     structure(c(fit, list(call = cal, formula = formula, terms = mt,  #>         data = data, offset = offset, control = control, method = method,  #>         contrasts = attr(X, \"contrasts\"), xlevels = .getXlevels(mt,  #>             mf))), class = c(fit$class, c(\"glm\", \"lm\"))) #> })(formula = trt ~ ., family = structure(list(family = \"binomial\",  #>     link = \"logit\", linkfun = function (mu)  #>     .Call(C_logit_link, mu), linkinv = function (eta)  #>     .Call(C_logit_linkinv, eta), variance = function (mu)  #>     mu * (1 - mu), dev.resids = function (y, mu, wt)  #>     .Call(C_binomial_dev_resids, y, mu, wt), aic = function (y,  #>         n, mu, wt, dev)  #>     { #>         m <- if (any(n > 1))  #>             n #>         else wt #>         -2 * sum(ifelse(m > 0, (wt/m), 0) * dbinom(round(m *  #>             y), round(m), mu, log = TRUE)) #>     }, mu.eta = function (eta)  #>     .Call(C_logit_mu_eta, eta), initialize = { #>         if (NCOL(y) == 1) { #>             if (is.factor(y))  #>                 y <- y != levels(y)[1L] #>             n <- rep.int(1, nobs) #>             y[weights == 0] <- 0 #>             if (any(y < 0 | y > 1))  #>                 stop(\"y values must be 0 <= y <= 1\") #>             mustart <- (weights * y + 0.5)/(weights + 1) #>             m <- weights * y #>             if (\"binomial\" == \"binomial\" && any(abs(m - round(m)) >  #>                 0.001))  #>                 warning(gettextf(\"non-integer #successes in a %s glm!\",  #>                   \"binomial\"), domain = NA) #>         } #>         else if (NCOL(y) == 2) { #>             if (\"binomial\" == \"binomial\" && any(abs(y - round(y)) >  #>                 0.001))  #>                 warning(gettextf(\"non-integer counts in a %s glm!\",  #>                   \"binomial\"), domain = NA) #>             n <- (y1 <- y[, 1L]) + y[, 2L] #>             y <- y1/n #>             if (any(n0 <- n == 0))  #>                 y[n0] <- 0 #>             weights <- weights * n #>             mustart <- (n * y + 0.5)/(n + 1) #>         } #>         else stop(gettextf(\"for the '%s' family, y must be a vector of 0 and 1's\\nor a 2 column matrix where col 1 is no. successes and col 2 is no. failures\",  #>             \"binomial\"), domain = NA) #>     }, validmu = function (mu)  #>     all(is.finite(mu)) && all(mu > 0 & mu < 1), valideta = function (eta)  #>     TRUE, simulate = function (object, nsim)  #>     { #>         ftd <- fitted(object) #>         n <- length(ftd) #>         ntot <- n * nsim #>         wts <- object$prior.weights #>         if (any(wts%%1 != 0))  #>             stop(\"cannot simulate from non-integer prior.weights\") #>         if (!is.null(m <- object$model)) { #>             y <- model.response(m) #>             if (is.factor(y)) { #>                 yy <- factor(1 + rbinom(ntot, size = 1, prob = ftd),  #>                   labels = levels(y)) #>                 split(yy, rep(seq_len(nsim), each = n)) #>             } #>             else if (is.matrix(y) && ncol(y) == 2) { #>                 yy <- vector(\"list\", nsim) #>                 for (i in seq_len(nsim)) { #>                   Y <- rbinom(n, size = wts, prob = ftd) #>                   YY <- cbind(Y, wts - Y) #>                   colnames(YY) <- colnames(y) #>                   yy[[i]] <- YY #>                 } #>                 yy #>             } #>             else rbinom(ntot, size = wts, prob = ftd)/wts #>         } #>         else rbinom(ntot, size = wts, prob = ftd)/wts #>     }, dispersion = 1), class = \"family\"), data = structure(list( #>     trt = structure(c(1L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L,  #>     2L, 2L, 2L, 2L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L,  #>     2L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 1L, 2L, 2L,  #>     2L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,  #>     2L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 1L,  #>     1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 2L, 1L,  #>     1L, 1L, 1L, 1L, 2L, 2L, 2L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L,  #>     2L, 2L, 2L, 1L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 2L,  #>     1L, 2L, 2L, 1L, 1L, 2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 1L, 2L,  #>     2L, 2L, 2L, 1L, 2L, 1L, 1L, 1L, 2L, 2L, 1L, 2L, 1L, 2L, 2L,  #>     1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 2L, 1L, 2L, 2L,  #>     2L, 2L, 2L, 1L, 2L, 2L, 1L, 2L, 1L, 1L, 2L, 1L, 1L, 2L, 2L,  #>     2L, 1L, 2L, 2L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 1L,  #>     1L, 1L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 1L), levels = c(\"Drug A\",  #>     \"Drug B\"), class = \"factor\", label = \"Chemotherapy Treatment\"),  #>     age = structure(c(23, 9, 31, NA, 51, 39, 37, 32, 31, 34,  #>     42, 63, 54, 21, 48, 71, 38, 49, 57, 46, 47, 52, 61, 38, 34,  #>     49, 63, 67, 68, 78, 36, 37, 53, 36, 51, 48, 57, 31, 37, 28,  #>     40, 49, 61, 56, 54, 71, 38, 31, 48, NA, 83, 52, 32, 53, 69,  #>     60, 45, 39, NA, 38, 36, 71, 31, 43, 57, 53, 25, 44, 25, 30,  #>     51, 40, NA, 43, 21, 54, 67, 43, 54, 41, 34, 34, 6, 39, 36,  #>     58, 27, 47, NA, 50, 61, 47, 52, 51, 68, 33, 65, 34, 38, 60,  #>     10, 49, 56, 50, 60, 49, 54, 39, 48, 65, 47, 61, 34, NA, NA,  #>     58, 26, 44, 17, 68, 57, 66, 44, NA, 67, 48, 62, 35, 53, 53,  #>     66, 55, 57, 47, 58, 43, 45, 44, 63, 59, 44, 53, 51, 28, 65,  #>     63, 76, 61, 33, 48, 42, 36, 55, 20, 26, 50, 47, 74, 50, 31,  #>     45, 51, 66, 76, 47, 48, 56, 70, 46, 43, 41, 41, 19, 49, 43,  #>     43, 75, 52, 42, 37, 45, 35, 67, 38, 44, 45, 39, 46, NA, 42,  #>     60, 31, 45, 38, NA, 19, 69, 66, NA, 64), label = \"Age\"),  #>     marker = structure(c(0.16, 1.107, 0.277, 2.067, 2.767, 0.613,  #>     0.354, 1.739, 0.144, 0.205, 0.513, 0.06, 0.831, 0.258, 0.128,  #>     0.445, 2.083, 0.157, 0.066, 0.325, 0.266, 0.719, 1.713, 0.096,  #>     0.105, 0.043, 0.981, 1.156, 0.105, 0.175, 0.309, 1.869, 2.008,  #>     1.894, 0.16, 1.209, 0.108, 0.611, 0.222, 0.803, 0.37, NA,  #>     0.177, 1.479, 0.161, 0.737, 0.124, 0.092, 0.385, 0.21, 0.475,  #>     1.628, 0.583, NA, 0.702, 1.206, 2.213, 1.406, 0.101, 0.013,  #>     2.032, 1.046, 0.408, 2.636, 1.263, NA, 2.447, 1.041, 0.531,  #>     0.924, 1.087, 0.733, 2.157, 0.333, 1.527, 2.238, 0.153, 0.305,  #>     0.131, 0.386, 1.645, 1.321, 0.229, 0.615, 1.976, 1.941, 0.22,  #>     3.874, 0.982, 1.68, 1.091, 0.169, 0.511, 2.141, 0.599, NA,  #>     0.389, 0.005, 0.075, 1.491, 0.358, 1.709, 0.056, 1.354, 2.522,  #>     0.387, 0.592, 0.243, 0.215, 1.207, 0.29, 0.718, 0.589, 0.003,  #>     1.328, 0.308, 0.691, 3.249, 0.039, 1.804, 0.238, 2.702, 1.441,  #>     0.27, NA, NA, 0.062, 2.19, 0.976, 3.062, 0.124, 0.045, 1.892,  #>     0.711, 1.079, 1.061, 0.239, 0.361, 0.033, 1.133, 1.225, 1.418,  #>     3.751, 3.02, 0.086, 0.772, 1.882, 2.725, 2.41, 0.352, 0.895,  #>     0.215, 0.141, 2.288, 1.658, 1.255, 1.306, 0.081, 0.667, 0.046,  #>     0.662, 1.985, 1.063, 1.55, 0.015, 0.056, NA, 0.51, 0.929,  #>     2.345, 0.25, 0.816, 0.022, 0.16, 0.547, 3.642, 0.092, 1.2,  #>     1.512, 2.124, NA, 0.862, 0.182, 1.075, 0.021, 0.402, 0.063,  #>     1.129, 0.61, NA, 0.717, 0.205, 0.946, 0.386, 0.37, 1.148,  #>     NA, 0.136, 0.439, 1.148), label = \"Marker Level (ng/mL)\"),  #>     stage = structure(c(1L, 2L, 1L, 3L, 4L, 4L, 1L, 1L, 1L, 3L,  #>     1L, 3L, 4L, 4L, 1L, 4L, 4L, 2L, 1L, 1L, 2L, 2L, 4L, 4L, 4L,  #>     2L, 4L, 1L, 4L, 3L, 1L, 2L, 3L, 3L, 3L, 3L, 1L, 1L, 4L, 4L,  #>     3L, 1L, 4L, 3L, 4L, 1L, 1L, 2L, 1L, 4L, 1L, 2L, 2L, 3L, 3L,  #>     2L, 4L, 1L, 4L, 2L, 4L, 1L, 4L, 1L, 4L, 1L, 1L, 1L, 4L, 1L,  #>     2L, 2L, 2L, 1L, 4L, 4L, 2L, 2L, 4L, 4L, 3L, 2L, 4L, 3L, 2L,  #>     4L, 1L, 2L, 1L, 4L, 3L, 3L, 1L, 3L, 2L, 3L, 2L, 2L, 3L, 4L,  #>     4L, 3L, 3L, 2L, 3L, 2L, 2L, 3L, 2L, 1L, 1L, 3L, 4L, 1L, 4L,  #>     3L, 3L, 2L, 4L, 2L, 1L, 2L, 1L, 4L, 3L, 3L, 3L, 2L, 1L, 2L,  #>     1L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 3L, 4L, 1L, 2L, 2L,  #>     1L, 3L, 4L, 2L, 4L, 2L, 1L, 2L, 3L, 1L, 3L, 4L, 2L, 2L, 1L,  #>     2L, 2L, 3L, 1L, 2L, 2L, 1L, 1L, 3L, 2L, 3L, 1L, 1L, 2L, 4L,  #>     2L, 4L, 4L, 2L, 3L, 4L, 3L, 4L, 4L, 1L, 1L, 4L, 4L, 4L, 1L,  #>     2L, 2L, 2L, 4L, 3L, 3L, 2L, 2L, 4L, 3L), levels = c(\"T1\",  #>     \"T2\", \"T3\", \"T4\"), class = \"factor\", label = \"T Stage\"),  #>     grade = structure(c(2L, 1L, 2L, 3L, 3L, 1L, 2L, 1L, 2L, 1L,  #>     3L, 1L, 3L, 1L, 1L, 3L, 3L, 2L, 3L, 2L, 1L, 2L, 1L, 1L, 2L,  #>     3L, 2L, 2L, 2L, 1L, 3L, 2L, 1L, 1L, 1L, 3L, 2L, 2L, 3L, 2L,  #>     2L, 3L, 3L, 1L, 3L, 1L, 3L, 2L, 2L, 2L, 3L, 3L, 3L, 2L, 3L,  #>     1L, 3L, 1L, 2L, 2L, 3L, 1L, 2L, 1L, 2L, 1L, 1L, 1L, 3L, 2L,  #>     1L, 3L, 3L, 3L, 2L, 3L, 3L, 1L, 2L, 1L, 1L, 1L, 1L, 3L, 1L,  #>     3L, 1L, 1L, 1L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 2L, 3L, 1L,  #>     3L, 1L, 2L, 2L, 1L, 2L, 2L, 3L, 1L, 3L, 3L, 1L, 1L, 1L, 2L,  #>     3L, 3L, 2L, 1L, 3L, 2L, 1L, 2L, 2L, 2L, 1L, 3L, 3L, 2L, 3L,  #>     1L, 1L, 1L, 2L, 2L, 3L, 2L, 2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L,  #>     2L, 2L, 2L, 2L, 1L, 1L, 3L, 2L, 2L, 1L, 2L, 1L, 2L, 3L, 2L,  #>     1L, 1L, 1L, 3L, 1L, 1L, 2L, 1L, 1L, 3L, 3L, 1L, 3L, 2L, 1L,  #>     3L, 1L, 2L, 1L, 1L, 3L, 1L, 2L, 1L, 2L, 2L, 2L, 3L, 2L, 2L,  #>     3L, 2L, 3L, 3L, 2L, 1L, 2L, 3L, 3L, 1L), levels = c(\"I\",  #>     \"II\", \"III\"), class = \"factor\", label = \"Grade\"), response = structure(c(0L,  #>     1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L,  #>     0L, 0L, 1L, 0L, NA, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     0L, 0L, 0L, NA, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L,  #>     0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 0L,  #>     1L, 1L, NA, 1L, 1L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, NA, 1L, 0L,  #>     0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L, 0L, 0L,  #>     0L, 1L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 1L, NA, 0L, 1L,  #>     0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, NA, 0L,  #>     1L, 1L, 0L, 0L), label = \"Tumor Response\"), death = structure(c(0L,  #>     0L, 0L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 0L, 0L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 0L,  #>     0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  #>     0L, 1L, 0L, 0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 1L,  #>     1L, 1L, 1L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 1L,  #>     1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 1L,  #>     1L, 1L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 0L, 1L,  #>     0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L,  #>     0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 1L,  #>     1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 1L, 1L, 1L,  #>     0L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 0L, 1L, 1L, 0L,  #>     1L, 0L, 1L, 0L), label = \"Patient Died\"), ttdeath = structure(c(24,  #>     24, 24, 17.64, 16.43, 15.64, 24, 18.43, 24, 10.53, 24, 24,  #>     14.34, 12.89, 22.68, 8.71, 24, 15.21, 24, 24, 24, 24, 16.92,  #>     23.89, 6.32, 15.77, 24, 24, 15.45, 17.43, 24, 20.9, 24, 24,  #>     24, 21.19, 12.52, 24, 15.59, 18, 18.02, 12.43, 12.1, 24,  #>     17.42, 24, 24, 24, 12.19, 10.02, 18.23, 10.42, 24, 24, 19.34,  #>     12.21, 14.46, 19.34, 10.16, 13.15, 10.12, 24, 22.77, 24,  #>     24, 22.13, 24, 20.62, 23.23, 7.38, 24, 24, 24, 24, 24, 19.22,  #>     7.27, 23.88, 16.23, 24, 14.06, 24, 24, 24, 16.44, 23.81,  #>     24, 18.37, 11.44, 20.94, 5.33, 22.92, 10.33, 24, 24, 14.54,  #>     19.14, 24, 21.19, 16.07, 9.97, 24, 24, 24, 19.75, 16.67,  #>     11.18, 18.29, 24, 17.56, 17.45, 24, 22.86, 13.68, 24, 24,  #>     17.46, 24, 24, 24, 24, 24, 13, 9.73, 15.65, 24, 3.53, 20.35,  #>     23.41, 16.47, 24, 24, 14.65, 17.81, 24, 21.83, 24, 24, 21.49,  #>     12.68, 24, 24, 24, 24, 10.07, 24, 24, 24, 8.37, 20.33, 24,  #>     24, 21.33, 12.63, 13.08, 24, 15.1, 20.14, 10.55, 24, 24,  #>     24, 24, 23.6, 24, 19.98, 15.55, 23.72, 22.41, 19.54, 16.57,  #>     24, 24, 24, 21.91, 24, 12.53, 24, 18.63, 14.82, 16.46, 24,  #>     9.24, 17.77, 24, 24, 9.92, 16.16, 10.51, 20.81, 24, 16.44,  #>     24, 22.4, 11.76, 24, 21.6, 24, 19.81, 24), label = \"Months to Death/Censor\")), class = c(\"tbl_df\",  #> \"tbl\", \"data.frame\"), row.names = c(NA, -200L))) #>  #> Coefficients: #> (Intercept)          age       marker      stageT2      stageT3      stageT4   #>    1.652845    -0.002014    -0.259849     0.404341     0.117402    -0.002102   #>     gradeII     gradeIII     response        death      ttdeath   #>   -0.037012     0.022890     0.498952    -0.003916    -0.076073   #>  #> Degrees of Freedom: 172 Total (i.e. Null);  162 Residual #>   (27 observations deleted due to missingness) #> Null Deviance:\t    239.5  #> Residual Deviance: 230.9 \tAIC: 252.9"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model_uv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a regression model programatically — regression_model_uv","title":"Create a regression model programatically — regression_model_uv","text":"Create regression model programatically","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model_uv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a regression model programatically — regression_model_uv","text":"","code":"regression_model_uv(   data,   outcome.str,   args.list = NULL,   fun = NULL,   vars = NULL,   ... )"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model_uv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a regression model programatically — regression_model_uv","text":"data data set outcome.str Name outcome variable. Character vector. args.list List arguments passed 'fun' '.call'. fun Name function character vector function use model creation. vars character vector variables include ... ignored now","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model_uv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a regression model programatically — regression_model_uv","text":"object standard class fun","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_model_uv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a regression model programatically — regression_model_uv","text":"","code":"if (FALSE) { # \\dontrun{ gtsummary::trial |>   regression_model_uv(outcome.str = \"age\") gtsummary::trial |>   regression_model_uv(     outcome.str = \"age\",     fun = \"stats::lm\",     args.list = NULL   ) gtsummary::trial |> regression_model_uv(   outcome.str = \"trt\",   fun = \"stats::glm\",   args.list = list(family = stats::binomial(link = \"logit\")) ) } # }"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table of regression model — regression_table","title":"Create table of regression model — regression_table","text":"Create table regression model","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table of regression model — regression_table","text":"","code":"regression_table(x, ...)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table of regression model — regression_table","text":"x regression model ... passed methods args.list list arguments passed 'fun'. fun function use table creation. Default \"gtsummary::tbl_regression\".","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create table of regression model — regression_table","text":"object standard class fun","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/regression_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create table of regression model — regression_table","text":"","code":"if (FALSE) { # \\dontrun{ gtsummary::trial |>   regression_model(     outcome.str = \"stage\",     fun = \"MASS::polr\"   ) |>   regression_table(args.list = list(\"exponentiate\" = TRUE)) gtsummary::trial |>   regression_model(     outcome.str = \"age\",     fun = \"stats::lm\",     formula.str = \"{outcome.str}~.\",     args.list = NULL   ) |>   regression_table() gtsummary::trial |>   regression_model(     outcome.str = \"trt\",     fun = \"stats::glm\",     args.list = list(family = binomial(link = \"logit\"))   ) |>   regression_table() gtsummary::trial |>   regression_model_uv(     outcome.str = \"trt\",     fun = \"stats::glm\",     args.list = list(family = stats::binomial(link = \"logit\"))   ) |>   regression_table() gtsummary::trial |>   regression_model_uv(     outcome.str = \"stage\",     args.list = list(family = stats::binomial(link = \"logit\"))   ) |>   regression_table()  list(   \"Univariable\" = regression_model_uv,   \"Multivariable\" = regression_model ) |>   lapply(\\(.fun){     do.call(       .fun,       c(         list(data = gtsummary::trial),         list(outcome.str = \"stage\")       )     )   }) |>   purrr::map(regression_table) |>   tbl_merge()   } # } regression_table <- function(x, ...) {   UseMethod(\"regression_table\") }  #' @rdname regression_table #' @export regression_table.list <- function(x, ...) {   x |>     purrr::map(\\(.m){       regression_table(x = .m, ...) |>         gtsummary::add_n()     }) |>     gtsummary::tbl_stack() }  #' @rdname regression_table #' @export regression_table.default <- function(x, ..., args.list = NULL, fun = \"gtsummary::tbl_regression\") {   # Stripping custom class   class(x) <- class(x)[class(x) != \"freesearcher_model\"]    if (any(c(length(class(x)) != 1, class(x) != \"lm\"))) {     if (!\"exponentiate\" %in% names(args.list)) {       args.list <- c(args.list, list(exponentiate = TRUE))     }   }    out <- do.call(getfun(fun), c(list(x = x), args.list))   out |>     gtsummary::add_glance_source_note() # |>   # gtsummary::bold_p() }"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/shiny_freesearcheR.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the freesearcheR tool locally — shiny_freesearcheR","title":"Launch the freesearcheR tool locally — shiny_freesearcheR","text":"data.frames global environment accessible app.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/shiny_freesearcheR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the freesearcheR tool locally — shiny_freesearcheR","text":"","code":"shiny_freesearcheR(...)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/shiny_freesearcheR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the freesearcheR tool locally — shiny_freesearcheR","text":"... arguments passed shiny::runApp()","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/shiny_freesearcheR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch the freesearcheR tool locally — shiny_freesearcheR","text":"shiny app","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/shiny_freesearcheR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch the freesearcheR tool locally — shiny_freesearcheR","text":"","code":"if (FALSE) { # \\dontrun{ data(mtcars) shiny_freesearcheR(launch.browser = TRUE) } # }"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/specify_qmd_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify format arguments to include in qmd header/frontmatter — specify_qmd_format","title":"Specify format arguments to include in qmd header/frontmatter — specify_qmd_format","text":"Specify format arguments include qmd header/frontmatter","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/specify_qmd_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify format arguments to include in qmd header/frontmatter — specify_qmd_format","text":"","code":"specify_qmd_format(data, fileformat = c(\"docx\", \"odt\", \"pdf\", \"all\"))"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/specify_qmd_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify format arguments to include in qmd header/frontmatter — specify_qmd_format","text":"data vector fileformat format include","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/specify_qmd_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify format arguments to include in qmd header/frontmatter — specify_qmd_format","text":"vector","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/tbl_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"A substitue to gtsummary::tbl_merge, that will use list names for the tab spanner names. — tbl_merge","title":"A substitue to gtsummary::tbl_merge, that will use list names for the tab spanner names. — tbl_merge","text":"substitue gtsummary::tbl_merge, use list names tab spanner names.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/tbl_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A substitue to gtsummary::tbl_merge, that will use list names for the tab spanner names. — tbl_merge","text":"","code":"tbl_merge(data)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/tbl_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A substitue to gtsummary::tbl_merge, that will use list names for the tab spanner names. — tbl_merge","text":"data gtsummary list object","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/tbl_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A substitue to gtsummary::tbl_merge, that will use list names for the tab spanner names. — tbl_merge","text":"gt summary list object","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/write_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to save data in RDS, load into specified qmd and render — write_quarto","title":"Wrapper to save data in RDS, load into specified qmd and render — write_quarto","text":"Wrapper save data RDS, load specified qmd render","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/write_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to save data in RDS, load into specified qmd and render — write_quarto","text":"","code":"write_quarto(data, ...)"},{"path":"https://agdamsbo.github.io/freesearcheR/reference/write_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to save data in RDS, load into specified qmd and render — write_quarto","text":"data list pass qmd ... Passed quarto::quarto_render()","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/reference/write_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to save data in RDS, load into specified qmd and render — write_quarto","text":"output file name","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/news/index.html","id":"freesearcher-2511","dir":"Changelog","previous_headings":"","what":"freesearcheR 25.1.1","title":"freesearcheR 25.1.1","text":"UI tweaks. NEW: Option set class hms using hms package. NEW: summary grid sparklines.","code":""},{"path":"https://agdamsbo.github.io/freesearcheR/news/index.html","id":"freesearcher-24121","dir":"Changelog","previous_headings":"","what":"freesearcheR 24.12.1","title":"freesearcheR 24.12.1","text":"Initial release Zenodo.","code":""}]
